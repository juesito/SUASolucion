@model IEnumerable<SUADATOS.Empleado>
@using SUADATOS
@using SUAMVC.Models
@using System.Text;

@{
    ViewBag.Title = "Empleados a modificar";
    
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/Home/Index");
    }
    suaEntities db = new suaEntities();
    Usuario usuario = Session["UsuarioData"] as Usuario;
    var solis = TempData["solicitudId"];

    int solicitudId = int.Parse(solis.ToString()); //ViewBag.solicitudId;

    Solicitud solicitud = db.Solicituds.Find(solicitudId);
    
    var grid = new WebGrid(source: Model, rowsPerPage: 10);
    var tableHtml = string.Empty;
    var sb = new StringBuilder();
    
    //Creamos una lista de columnas
    var gridColumns = new List<WebGridColumn>();
    gridColumns.Add(grid.Column("",
                   style: "col1",
                   format: @<text>
                    <input class="edit-personal display-mode" type="image" src="~/Content/Images/edit.png"
                           alt="@Language.edit" title="@Language.edit" width="20" height="20" id="@item.id" />
                    <input class="save-personal edit-mode" type="image" src="~/Content/Images/save-floppy.png"
                           alt="@Language.guardar" title="@Language.guardar" width="20" height="20" id="@item.id" />
                    <input class="cancel-capture edit-mode" type="image" src="~/Content/Images/cancel.png"
                           alt="@Language.bt_cancel" title="@Language.bt_cancel" width="20" height="20" id="@item.id" />
                </text>));
    gridColumns.Add(grid.Column("empleadoId", "ID", format: @<text>  @if (@item.folioEmpleado != null)
    {  @item.folioEmpleado }</text>, canSort: true));

    gridColumns.Add(grid.Column("nombreCompleto", "Nombre", format: @<text> @if (@item.nombre != null)
    {  @item.nombreCompleto }</text>, canSort: true));
    gridColumns.Add(grid.Column("nss", "IMSS", format: @<text> @if (@item.nss != null)
    {  @item.nss }</text>, canSort: true));
    gridColumns.Add(grid.Column("categoria", "Categoría", format: @<text> @if (@item.categoria != null)
    {  @item.categoria }</text>, canSort: true));



    gridColumns.Add(grid.Column("fechaAltaImss", "Fecha Ingreso", @<text><div style='width: 6em'>@item.fechaCreacion.ToString("dd-MM-yyyy")</div></text>, null, canSort: true));
    gridColumns.Add(grid.Column("fechaModificacion", "Fecha Modificación",
        @<text><div style='width: 6em'>
                @if (@item.fechaModificacion != null)
                { @item.fechaModificacion.ToString("dd-MM-yyyy")}
            </div></text>, null, canSort: true));
    gridColumns.Add(grid.Column("SDI",
                        style: "col4",
                        format: @<text>@if (@item.sdi != null)
                        {
                            <span id="SdiId" class="display-mode">@item.sdi.descripcion</span>
                            @Html.sdiDrownList(usuario.Id, "sdiId", "edit-mode")
                        }
                        </text>));
    gridColumns.Add(grid.Column("banco", "Banco", @<text> @if (@item.banco != null)
    {@item.banco.descripcion }</text>, canSort: true));
    if (SecurityUserModel.verificarPermiso("1", "1", 4))
    {
        gridColumns.Add(grid.Column(header: "Eliminar", format: @<text><a href="@Url.Action("Delete", "Empleados", new { id = item.id })"><img src="~/Content/Images/delete.png" alt="" style="border:none;" class="icon" /></a></text>));
    }
    

    sb.Append(grid.GetHtml(
    columns: grid.Columns(gridColumns.ToArray()),
    tableStyle: "table table-striped tableSua"
    ));

    tableHtml = sb.ToString().Trim();


}

@section Menu {
    <div>Modificar Empleado<img src="~/Content/Images/people-b.png" width="15" height="15" /></div>
}
@Html.Hidden("solsId", solicitud.id, new { id = "solsId" })

@using (Html.BeginForm("SoloParaRefrescar", "Empleados", FormMethod.Post, new { id = "target", solicitudId = solicitud.id }))
{ 
}

@using (Html.BeginForm())
{
    
    <div class="marqueeFilter">
        <table class="input-table">
            <tr>
                <td style="padding-top:15px">
                    @Html.Label("Cliente")
                </td>
                <td>
                    @Html.Label(solicitud.Cliente.descripcion)
                </td>
                <td>
                    @Html.Label("Proyecto")
                </td>
                <td>
                    @Html.Label(solicitud.Proyecto.descripcion)
                </td>
                <td>
                    @Html.Label("Folio")
                </td>
                <td>
                    @Html.Label(solicitud.folioSolicitud)
                </td>
                </tr>
        </table>
    </div>
}


@if (!tableHtml.IsEmpty())
{
    <div id="table-container" class="table-container">
        
        @Html.Raw(tableHtml)

    </div>
}

<script>
    $(function () {
        $('.edit-mode').hide();
        $('.edit-personal').on('click', function () {
            var tr = $(this).parents('tr:first');
            tr.find('.edit-mode, .display-mode').toggle();
        });
        $('.save-personal').on('click', function () {
            var tr = $(this).parents('tr:first');
            var empleadoId = $(this).prop('id');
            var solsId = $("#solsId").val();
            var sdi = tr.find('#sdiId').val();

            $.post(
                '/Empleados/ModificarSalario',
                { EmpleadoId: empleadoId, Sdi: sdi, SolicitudId: solsId },
                function (empleado) {
                    tr.find('#SdiId').text(empleado.sdi);
                }, "json");
            tr.find('.edit-mode, .display-mode').toggle();
            $("#target").submit();
        });
        $('.cancel-capture').on('click', function () {
            var tr = $(this).parents('tr:first');
            tr.find('.edit-mode, .display-mode').toggle();
        });
    })
</script>