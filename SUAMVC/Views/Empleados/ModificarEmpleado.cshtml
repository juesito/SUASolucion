@model IEnumerable<SUADATOS.Empleado>
@using SUADATOS
@using SUAMVC.Models
@using System.Text;

@{
    ViewBag.Title = "Empleados a modificar";

    Layout = "~/Views/Shared/_Layout.cshtml";
    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/Home/Index");
    }
    suaEntities db = new suaEntities();
    Usuario usuario = Session["UsuarioData"] as Usuario;
    var solis = TempData["solicitudId"];

    int solicitudId = int.Parse(solis.ToString()); //ViewBag.solicitudId;

    Solicitud solicitud = db.Solicituds.Find(solicitudId);

    var grid = new WebGrid(source: Model, rowsPerPage: 10);
    var tableHtml = string.Empty;
    var sb = new StringBuilder();

    //Creamos una lista de columnas
    var gridColumns = new List<WebGridColumn>();
    gridColumns.Add(grid.Column(format: @<text><input type="checkbox" name="ids" value="@item.id" /></text>, header: "{}"));
    gridColumns.Add(grid.Column("empleadoId", "ID", format: @<text>  @if (@item.folioEmpleado != null)
    {  @item.folioEmpleado }</text>, canSort: true));
    gridColumns.Add(grid.Column("nombreCompleto", "Nombre", format: @<text> @if (@item.nombre != null)
    {  @item.nombreCompleto }</text>, canSort: true));
    gridColumns.Add(grid.Column("nss", "IMSS", format: @<text> @if (@item.nss != null)
    {  @item.nss }</text>, canSort: true));
    gridColumns.Add(grid.Column("categoria", "Categoría", format: @<text> @if (@item.categoria != null)
    {  @item.categoria }</text>, canSort: true));

    gridColumns.Add(grid.Column("fechaAltaImss", "Fecha Ingreso", @<text><div style='width: 6em'>@item.fechaCreacion.ToString("dd-MM-yyyy")</div></text>, null, canSort: true));
    gridColumns.Add(grid.Column("fechaModificacion", "Fecha Modificación",
        @<text><div style='width: 6em'>
                @if (@item.fechaModificacion != null)
                { @item.fechaModificacion.ToString("dd-MM-yyyy")}
            </div></text>, null, canSort: false));

    //gridColumns.Add(grid.Column("SDI1.descripcion", "SDI Actual", canSort: false));

    gridColumns.Add(grid.Column("SDI.id", "Sdi Modificado",
        format: @<text>@if (@item.sdi != null)
        {
            <span id="SdiId" class="display-mode">@item.sdi.descripcion</span>
        }
        </text>, canSort: false));



    gridColumns.Add(grid.Column("banco", "Banco", @<text> @if (@item.banco != null)
    {@item.banco.descripcion }</text>, canSort: false));

    sb.Append(grid.GetHtml(
    columns: grid.Columns(gridColumns.ToArray()),
    tableStyle: "table table-striped tableSua"
    ));

    tableHtml = sb.ToString().Replace("{}", "<input type='checkbox' id='selectAll' name='slall' />").Trim();


}

@section Menu {
    <div>Asignación de empleados a Modificar<img src="~/Content/Images/people-b.png" width="15" height="15" /></div>
}
@Html.Hidden("solsId", solicitud.id, new { id = "solsId" })


<div class="marqueeFilter">
    <table style="float:left; margin-top:5px;display:inline-block;">
        <tr style="text-align:left;vertical-align:bottom;">
            <td style="padding-top:20px">
                @Html.Label("Cliente:")
            </td>
            <td>
                @Html.Label(solicitud.Cliente.descripcion)
            </td>
            <td style="padding-left:50px">
                @Html.Label("Proyecto:")
            </td>
            <td style="padding-left:5px">
                @Html.Label(solicitud.Proyecto.descripcion)
            </td>
            <td style="padding-left:50px">
                @Html.Label("Folio:")
            </td>
            <td style="padding-left:5px">
                @Html.Label(solicitud.folioSolicitud)
            </td>
        </tr>
    </table>
</div>


@if (!tableHtml.IsEmpty())
{
    using (Html.BeginForm("asignarEmpleadoParaModificar", "Empleados", new { solicitudId = solicitudId }, FormMethod.Post))
    //using (Html.BeginForm())
    {
        <div class="menubar-header">
            <table>
                <tr>
                    <td style="padding-top:15px">
                        <a href="@Url.Action("Index", "SolicitudesModificacion", new { clienteId = solicitud.clienteId, proyectoId = solicitud.proyectoId })">
                            <p><img src="~/Content/Images/back.png" alt="" style="border:none;float:left;clear:both; " class="icon" />@Language.regresar</p>
                        </a>
                    </td>
                    <td style="padding-left:30px; padding-top:8px">
                        <input type="submit" value="" class="raddEmployee_button" title="Asignar empleados marcados" />
                    </td>
                    <td style="padding-left:30px; padding-top:8px">
                        <a href="@Url.Action("ModificarEmpleadoSUA", "Empleados", new { solicitudId = solicitud.id, clienteId = solicitud.clienteId})">
                            <img src="~/Content/Images/upload-blue.png" alt="" style="border:none;" class="icon" title="Seleccionar empleados SUA" />
                        </a>
                    </td>
                    <td style="padding-left:30px; padding-top:3px">

                        <a href="@Url.Action("SolicitudEmpleado", "SolicitudesModificacion", new { solicitudId = solicitudId })">
                            <img src="~/Content/Images/see.png" alt="" style="border:none;" class="icon" title="Ver empleados asignados" />
                        </a>
                    </td>
                </tr>
            </table>
        </div>

        <div id="table-container" class="table-container">
            @Html.Raw(tableHtml)
        </div>
    }
}

<script>
    $(document).ready(function () {
        $("input[name=slall]").change(function () {
            $('#table-container input[type=checkbox]').each(function () {
                if ($("input[name=slall]:checked").length == 1) {
                    this.checked = true;
                } else {
                    this.checked = false;
                }
            });
        });
    });
</script>
