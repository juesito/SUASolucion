@model IEnumerable<SUADATOS.Acreditado>
@using SUADATOS
@using SUAMVC.Models
@using System.Text;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/Home/Index");
    }
    ViewBag.Title = "Index";
    var buscar = "0";
    if (TempData["buscador"] != null)
    {
        buscar = TempData["buscador"] as String;
    }
    
    Layout = "~/Views/Shared/_Layout.cshtml";
    var grid = new WebGrid(source: Model, rowsPerPage: 12);
    @functions {
        static IHtmlString ShowPDF(string id)
        {
            return id != null ? new HtmlString("<img src=\"/Content/Images/pdf.gif\" class=\"icon\" />") : null;
        }
    }
    
    var tableHtml = string.Empty;
    var sb = new StringBuilder();

    //Creamos una lista de columnas
    var gridColumns = new List<WebGridColumn>();
    gridColumns.Add(grid.Column("Patrone.registro", "Registro Patronal", null, null, true));
    gridColumns.Add(grid.Column("apellidoPaterno", "Ape. Paterno", null, null, true));
    gridColumns.Add(grid.Column("apellidoMaterno", "Ape. Materno", null, null, true));
    gridColumns.Add(grid.Column("nombre", "Nombre(s)",  @<text><div style='width: 15em'>@item.nombre</div></text> , null, canSort: true));
    gridColumns.Add(grid.Column("nombreCompleto", "Nombre", @<text><div style='width: 25em'>@item.nombrecompleto</div></text> , null, canSort: true));
    gridColumns.Add(grid.Column("curp", "CURP", null, null, true));
    gridColumns.Add(grid.Column("rfc", "RFC", null, null, true));
    gridColumns.Add(grid.Column("Cliente.claveCliente", "Ubicación", format: @<text> @if (@item.Cliente != null){@item.Cliente.claveCliente}</text>, canSort: true));
    gridColumns.Add(grid.Column("ocupacion", "Ocupación", @<text><div style='width: 12em'>@item.ocupacion </div></text>, null, canSort: true));
    gridColumns.Add(grid.Column("Cliente.Grupos.nombreCorto", "ID.Grupo", format: @<text> @if (@item.Cliente != null){@item.Cliente.Grupos.nombreCorto}</text>, canSort: true));
    gridColumns.Add(grid.Column("numeroAfiliacion", "Num.Afiliación", null, null, true));
    gridColumns.Add(grid.Column("numeroCredito", "No.Crédito", null, null, true));
    gridColumns.Add(grid.Column("fechaAlta", "Fecha Alta", @<text><div style='width: 6em'>@item.fechaAlta.ToString("dd-MM-yyyy")</div></text>, null, canSort: true));
    gridColumns.Add(grid.Column("fechaBaja", "Fecha Baja", @<text><div style='width: 6em'>@if (@item.fechaBaja != null) { @item.fechaBaja.ToString("dd-MM-yyyy")}</div></text>, null, canSort: true));
    gridColumns.Add(grid.Column("fechaInicioDescuento", "F.Ini.Desc.", @<text><div style='width: 6em'>@if (@item.fechaInicioDescuento != null){ @item.fechaInicioDescuento.ToString("dd-MM-yyyy") }</div></text>, canSort: true));
    gridColumns.Add(grid.Column("fechaFinDescuento", "F.Fin.Desc.", format: @<text>@if (@item.fechaFinDescuento != null){@item.fechaFinDescuento.ToString("dd-MM-yyyy")}</text>, canSort: true));
    gridColumns.Add(grid.Column("smdv", "SMDF", format: @<text>@item.smdv.ToString("0.00")</text>, canSort:true));
    gridColumns.Add(grid.Column("sdi", "SDI", format: @<text>@item.sdi.ToString("0.00")</text>, canSort:true));
    gridColumns.Add(grid.Column("sd", "SD", format: @<text>@item.sd.ToString("0.00")</text>, canSort:true));
    gridColumns.Add(grid.Column("vsm", "VSM", format: @<text>@item.vsm.ToString("0.0000")</text>, canSort:true));
    gridColumns.Add(grid.Column("porcentaje", "Porcentaje", format: @<text>@item.porcentaje.ToString("% 0.00")</text>, canSort:true));
    gridColumns.Add(grid.Column("cuotaFija", "Cuota Fija", format: @<text>@item.cuotaFija.ToString("0,000.00")</text>, canSort:true));
    gridColumns.Add(grid.Column("descuentoBimestral", "Desc. Bimestral", format: @<text>@item.descuentoBimestral.ToString("0,000.00")</text>, canSort:true));
    gridColumns.Add(grid.Column("descuentoMensual", "Desc. Mensual", format: @<text>@item.descuentoMensual.ToString("000.00")</text>, canSort:true));
    gridColumns.Add(grid.Column("descuentoSemanal", "Desc. Semanal", format: @<text>@item.descuentoSemanal.ToString("000.00")</text>, canSort:true));
    gridColumns.Add(grid.Column("descuentoCatorcenal", "Desc. Catorcenal", format: @<text>@item.descuentoCatorcenal.ToString("000.00")</text>, canSort:true));
    gridColumns.Add(grid.Column("descuentoQuincenal", "Desc. Quincenal", format: @<text>@item.descuentoQuincenal.ToString("000.00")</text>, canSort:true));
    gridColumns.Add(grid.Column("descuentoVeintiochonal", "Desc. Veintiochonal", format: @<text>@item.descuentoVeintiochonal.ToString("000.00")</text>, canSort:true));
    gridColumns.Add(grid.Column("descuentoDiario", "Desc. Diario", format: @<text>@item.descuentoDiario.ToString("0.00")</text>, canSort: true));
    gridColumns.Add(grid.Column("Patrone.Plaza.cve", "ID Plaza", null, null, true));
    gridColumns.Add(grid.Column(header: "Aviso Ret.",format:@<text><a href="@Url.Action("ViewAttachment", "Acreditados", new { id = item.id, option = "A", carga = item.alta })" target="_blank">@ShowPDF(item.alta)</a></text>));

    if (SecurityUserModel.verificarPermiso("Acreditados", "Subir acuse"))
    {                                                                                                                                                                                                                           
        gridColumns.Add(grid.Column(header: "Imagen", format: @<text><a href="@Url.Action("UploadFileAcre", "Movimientos", new { id = item.id })"><img src="~/Content/Images/upload-blue.png" alt="" style="border:none;" class="icon" /></a></text>));
    }
    
    sb.Append(grid.GetHtml(
    columns:
        grid.Columns(gridColumns.ToArray()),         
      tableStyle: "table table-striped tableSua"
      ));

    tableHtml = sb.ToString().Trim();
}

@section Menu {
    <div>Catalogo de Acreditados <img src="~/Content/Images/people-b.png" width="15" height="15" /></div>
}

@using (Html.BeginForm(null, null, FormMethod.Get))
{
    <p>

        Plaza: @Html.DropDownList("plazasId", "Seleccione")

        Patron: @Html.DropDownList("patronesId", "Seleccione")

        Grupo: @Html.DropDownList("gruposId", "Seleccione")

        Cliente: @Html.DropDownList("clientesId", "Seleccione")

        <input type="submit" value="Consultar" class="btn btn-success" />

        @Html.ActionLink("Buscar", "ActivaVariable", "Acreditados")

       @if (SecurityUserModel.verificarPermiso("Acreditados", "Descargar excel"))
       {
        <a href="@Url.Action("GetExcel", "Acreditados", new
                {
                    plazasId = @ViewBag.pzaId,
                    patronesId = @ViewBag.patId,
                    clientesId = @ViewBag.cteId,
                    gruposId = @ViewBag.gpoId,
                    opcion = @ViewBag.opBuscador,
                    valor = @ViewBag.valBuscador
                })" style="text-align:right">
            <img src="~/Content/Images/xls.png" alt="" style="border:none;" width="30" height="30" />
        </a>
       }

        @if(buscar.Equals("1")){
        <fieldset>
            Opción: @Html.DropDownList("opcion", "Seleccione")
            @Html.Label("valor", "Valor:")
            @Html.TextBox("valor")
        </fieldset>
        }
    </p>

    <div style ="float: right; ">
        
        Registros: @Html.Label("Registros: ", Convert.ToString((int)ViewBag.registros))
        Activos: @Html.Label("Activos: ", Convert.ToString((int)ViewBag.activos))

    </div>


    if (!tableHtml.IsEmpty())
    {
        @Html.Raw(tableHtml)
    }


}



