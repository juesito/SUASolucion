@model IEnumerable<SUADATOS.DetallePrenomina>
@using SUADATOS
@using SUAMVC.Models
@using System.Text;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/Home/Index");
    }
    Usuario usuario = Session["UsuarioData"] as Usuario;
    String msg = TempData["message"] as String;
    suaEntities db = new suaEntities();

    SolicitudPrenomina solicitud = new SolicitudPrenomina();
    if (ViewBag.solicitudId != null)
    {
        int solicitudInt = int.Parse(ViewBag.solicitudId.ToString());
        solicitud = db.SolicitudPrenominas.Find(solicitudInt);
    }

    var grid = new WebGrid(source: Model, rowsPerPage: 10);
    var tableHtml = string.Empty;
    var sb = new StringBuilder();

    //Creamos una lista de columnas
    var gridColumns = new List<WebGridColumn>();

    if (solicitud.Concepto1.descripcion.Trim().Equals("IAS"))
    {
        gridColumns.Add(grid.Column("",
                        style: "col1",
                        format: @<text>
                            <input class="edit-personal display-mode" type="image" src="~/Content/Images/edit.png"
                                   alt="@Language.edit" title="@Language.edit" width="20" height="20" id="@item.id" />
                            <input class="save-personal edit-mode" type="image" src="~/Content/Images/save-floppy.png"
                                   alt="@Language.guardar" title="@Language.guardar" width="20" height="20" id="@item.id" />
                            <input class="cancel-capture edit-mode" type="image" src="~/Content/Images/cancel.png"
                                   alt="@Language.bt_cancel" title="@Language.bt_cancel" width="20" height="20" id="@item.id" />
                        </text>));
        gridColumns.Add(grid.Column("Empleado.nombreCompleto", Language.nombreCompleto, format: @<text> @if (@item.id != null)
        {  @item.Empleado.nombre }</text>, canSort: true));

        gridColumns.Add(grid.Column("ingresos", "Ingresos",
            format: @<text>
                <span id="ingresos" class="display-mode" style="font-weight:bold; color:red">$@item.isr</span>
                @Html.Editor("Ingresos", new { htmlAttributes = new { @class = "edit-mode", size = 5 } })
            </text>
        , canSort: true));


        gridColumns.Add(grid.Column("isr", "ISR",
            format: @<text>
                <span id="isr" class="display-mode" style="font-weight:bold; color:red">$@item.isr</span>
                    @Html.Editor("Isr", new { htmlAttributes = new { @class = "edit-mode", size = 5 } })
            </text>
, canSort: true));

        gridColumns.Add(grid.Column("otrosDescuentos", "Otros Desc.",
            format: @<text>
                <span id="otrosDescuentos" class="display-mode" style="font-weight:bold; color:red">$@item.otrosDescuentos</span>
                @Html.Editor("OtrosDescuentos", new { htmlAttributes = new { @class = "edit-mode", size = 5 } })
            </text>
, canSort: true));
        gridColumns.Add(grid.Column("netoPagar", "Neto Pagar",
            format: @<text>
                <span id="netoPagar" style="font-weight:bold; color:blue">$@item.netoPagar</span>
            </text>
, canSort: true));
        gridColumns.Add(grid.Column("CuentaEmpleado.cuenta", Language.cuentaBancaria, format: @<text> @if (@item.CuentaEmpleado != null)
        {  @item.CuentaEmpleado.cuenta }</text>, canSort: true));
        gridColumns.Add(grid.Column("Empleado.categoria", Language.categoria, canSort: true));


        if (SecurityUserModel.verificarPermiso("eliminar solcitud alta", "Se agrega solicitud para eliminar empleados", 6))
        {
            gridColumns.Add(grid.Column(header: "Eliminar", format: @<text>

                <a href="@Url.Action("Delete", "DetallePrenominas", new { id = item.id })">
                    <img src="~/Content/Images/delete.png" alt="" style="border:none;" class="icon" />
                </a>
            </text>));
        }
    }
    else if (solicitud.Concepto1.descripcion.Trim().Equals("SyS Dias Laborados"))
    {
        gridColumns.Add(grid.Column("",
                        style: "col1",
                        format: @<text>
                            <input class="edit-personal display-mode" type="image" src="~/Content/Images/edit.png"
                                   alt="@Language.edit" title="@Language.edit" width="20" height="20" id="@item.id" />
                            <input class="save-personal edit-mode" type="image" src="~/Content/Images/save-floppy.png"
                                   alt="@Language.guardar" title="@Language.guardar" width="20" height="20" id="@item.id" />
                            <input class="cancel-capture edit-mode" type="image" src="~/Content/Images/cancel.png"
                                   alt="@Language.bt_cancel" title="@Language.bt_cancel" width="20" height="20" id="@item.id" />
                        </text>));
        gridColumns.Add(grid.Column("Empleado.nombreCompleto", Language.nombreCompleto, format: @<text> @if (@item.id != null)
        {  @item.Empleado.nombre }</text>, canSort: true));
        gridColumns.Add(grid.Column("diasLaborados", "DT", format: @<text> @if (@item.diasLaborados != null)
        {
            <span id="diasLaborados" class="display-mode" style="font-weight:bold; color:green">@item.diasLaborados</span>
            @Html.Editor("DiasLaborados", new { htmlAttributes = new { @class = "edit-mode", size = 3 } })
        }</text>,
                                   canSort: true));
        gridColumns.Add(grid.Column("Empleado.salarioReal", Language.salarioReal, format: @<text> @if (@item.EmpleadoId != null)
        {  <p>$@item.Empleado.salarioReal</p> }</text>, canSort: true));
        gridColumns.Add(grid.Column("Empleado.SDI.descripcion", "SDI", format: @<text> @if (@item.Empleado.SDI != null)
        {  <p>$@item.Empleado.SDI.descripcion</p> }</text>, canSort: true));
        gridColumns.Add(grid.Column("gratificacion", "Gratificacion",
            format: @<text>
                <span id="gratificacion" class="display-mode" style="font-weight:bold; color:green">$@item.gratificacion</span>
                @Html.Editor("Gratificacion", new { htmlAttributes = new { @class = "edit-mode", size = 5 } })
            </text>
, canSort: true));
        gridColumns.Add(grid.Column("primaVacacional", "Prima Vacional",
            format: @<text>
                <span id="primaVacacional" class="display-mode" style="font-weight:bold; color:green">$@item.primaVacacional</span>
                @Html.Editor("PrimaVacacional", new { htmlAttributes = new { @class = "edit-mode", size = 5 } })
            </text>
, canSort: true));
        gridColumns.Add(grid.Column("aguinaldo", "Aguinaldo",
                format: @<text>
                <span id="aguinaldo" class="display-mode" style="font-weight:bold; color:green">$@item.aguinaldo</span>
                @Html.Editor("Aguinaldo", new { htmlAttributes = new { @class = "edit-mode", size = 5 } })
                </text>
, canSort: true));
        gridColumns.Add(grid.Column("descuentoInfonavit", "Infonavit",
    format: @<text>
                <span id="descuentoInfonavit" class="display-mode" style="font-weight:bold; color:red">$@item.descuentoInfonavit</span>
                @Html.Editor("DescuentoInfonavit", new { htmlAttributes = new { @class = "edit-mode", size = 5 } })
    </text>

, canSort: true));
        gridColumns.Add(grid.Column("descuentoFonacot", "Fonacot",
           format: @<text>
                <span id="descuentoFonacot" class="display-mode" style="font-weight:bold; color:red">$@item.descuentoFonacot</span>
                @Html.Editor("DescuentoFonacot", new { htmlAttributes = new { @class = "edit-mode", size = 5 } })
        </text>
, canSort: true));
        gridColumns.Add(grid.Column("descuentoPension", "Desc. Pensión",
            format: @<text>
                <span id="descuentoPension" class="display-mode" style="font-weight:bold; color:red">$@item.descuentoPension</span>
                @Html.Editor("DescuentoPension", new { htmlAttributes = new { @class = "edit-mode", size = 5 } })
            </text>
, canSort: true));
        gridColumns.Add(grid.Column("otrosDescuentos", "Otros Desc.",
            format: @<text>
                <span id="otrosDescuentos" class="display-mode" style="font-weight:bold; color:red">$@item.otrosDescuentos</span>
                @Html.Editor("OtrosDescuentos", new { htmlAttributes = new { @class = "edit-mode", size = 5 } })
            </text>
, canSort: true));
        gridColumns.Add(grid.Column("netoPagar", "Neto Pagar",
            format: @<text>
                <span id="netoPagar" style="font-weight:bold; color:blue">$@item.netoPagar</span>
            </text>
, canSort: true));
        gridColumns.Add(grid.Column("Empleado.cuentaBancaria", "Datos Banco", format: @<text> @if (@item.CuentaEmpleado != null)
        {  @item.CuentaEmpleado.cuenta }</text>, canSort: true));
        gridColumns.Add(grid.Column("Empleado.categoria", Language.categoria, canSort: true));


        if (SecurityUserModel.verificarPermiso("eliminar solcitud alta", "Se agrega solicitud para eliminar empleados", 6))
        {
            gridColumns.Add(grid.Column(header: "Eliminar", format: @<text>

                <a href="@Url.Action("Delete", "DetallePrenominas", new { id = item.id })">
                    <img src="~/Content/Images/delete.png" alt="" style="border:none;" class="icon" />
                </a>
            </text>));
        }
    }


    sb.Append(grid.GetHtml(
columns: grid.Columns(gridColumns.ToArray()),
tableStyle: "table table-striped tableSua"
));

    tableHtml = sb.ToString().Trim();

}

@section Menu {
    <div>Detalle Prenominas<img src="~/Content/Images/people-b.png" width="15" height="15" /></div>
}


<div class="marqueeFilter">
    @if (String.IsNullOrEmpty(msg))
    {
        <p style="font-weight:bold;">@msg</p>
    }
    <table class="input-table">
        <tr>
            <td>@Html.Label(Language.solicitud)</td>
            <td>@Html.Label(Language.cliente)</td>
            <td>@Html.Label(Language.plaza)</td>
            <td>@Html.Label(Language.proyecto)</td>
            <td>@Html.Label("Año")</td>
            <td>@Html.Label(Language.fechaInicio)</td>
            <td>@Html.Label(Language.fechaFinal)</td>
            <td>@Html.Label("Fecha pago")</td>
            <td>@Html.Label(Language.periodo)</td>
            <td>@Html.Label("Tipo Pago")</td>
            <td>@Html.Label("Moneda")</td>
            <td></td>
        </tr>
        <tr>
            <td class="value-label">@Html.Label(solicitud.folioSolicitud)</td>
            <td class="value-label">@Html.Label(solicitud.Cliente.descripcion)</td>
            <td class="value-label">@Html.Label(solicitud.Plaza.descripcion)</td>
            <td class="value-label">@Html.Label(solicitud.Proyecto.descripcion)</td>
            <td class="value-label">@Html.Label(solicitud.anno)</td>
            <td class="value-label">@Html.Label(solicitud.fechaInicial.ToString("dd MMM yyyy"))</td>
            <td class="value-label">@Html.Label(solicitud.fechaFinal.ToString("dd MMM yyyy"))</td>
            <td class="value-label">@Html.Label(solicitud.fechaPago.ToString("dd MMM yyyy"))</td>
            <td class="value-label">@Html.Label(solicitud.Concepto.descripcion)</td>
            <td class="value-label">@Html.Label(solicitud.Concepto1.descripcion)</td>
            <td class="value-label">@Html.Label(solicitud.Concepto3.descripcion)</td>
            <td></td>
        </tr>
    </table>
</div>
<div class="menubar-header">
    <a href="@Url.Action("Index", "SolicitudPrenominas", new { clienteId = solicitud.clienteId, plazaId = solicitud.plazaId,
            proyectoId = solicitud.proyectoId, ejercicioId = solicitud.anno })" style="text-align:right">
        <img src="~/Content/Images/back.png" title="Regresar" alt="Regresar" style="border:none;" class="menuIcon" />
    </a>
    <a href="@Url.Action("AddEmployees", "DetallePrenominas", new { solicitudId = ViewBag.solicitudId })" style="text-align:right">
        <img src="~/Content/Images/selectData.png" title="Añadir Empleados" alt="Añadir Empleados" style="border:none;" class="menuIcon" />
    </a>
</div>
@if (!tableHtml.IsEmpty())
{
    <div id="table-container" class="table-container">
        @Html.Raw(tableHtml)
    </div>
}

<script>
    $(function () {
        $('.edit-mode').hide();
        $('.edit-personal').on('click', function () {
            var tr = $(this).parents('tr:first');
            var dl = tr.find('#diasLaborados').text();
            var gr = tr.find('#gratificacion').text();
            var pv = tr.find('#primaVacacional').text();
            var ag = tr.find('#aguinaldo').text();
            var di = tr.find('#descuentoInfonavit').text();
            var df = tr.find('#descuentoFonacot').text();
            var dp = tr.find('#descuentoPension').text();
            var dot = tr.find('#otrosDescuentos').text();
            var isr = tr.find('#isr').text();
            var ingresos = tr.find('#ingresos').text();


            tr.find('.edit-mode, .display-mode').toggle();
            var tr = $(this).parents('tr:first');
            tr.find('#DiasLaborados').val(dl);
            tr.find('#Gratificacion').val(gr.replace("$", ""));
            tr.find('#PrimaVacacional').val(pv.replace("$", ""));
            tr.find('#Aguinaldo').val(ag.replace("$", ""));
            tr.find('#DescuentoInfonavit').val(di.replace("$", ""));
            tr.find('#DescuentoFonacot').val(df.replace("$", ""));
            tr.find('#DescuentoPension').val(dp.replace("$", ""));
            tr.find('#OtrosDescuentos').val(dot.replace("$", ""));
            tr.find('#isr').val(isr.replace("$", ""));
            tr.find('#ingresos').val(ingresos.replace("$", ""));

        });
        $('.cancel-capture').on('click', function () {
            var tr = $(this).parents('tr:first');
            tr.find('.edit-mode, .display-mode').toggle();
        });

        $('.save-personal').on('click', function () {
            var tr = $(this).parents('tr:first');
            var id_ = $(this).prop('id');
            var diasLaborados_ = tr.find('#DiasLaborados').val();
            var gratificacion_ = tr.find('#Gratificacion').val();
            var primaVacacional_ = tr.find('#PrimaVacacional').val();
            var aguinaldo_ = tr.find('#Aguinaldo').val();
            var descuentoInfonavit_ = tr.find('#DescuentoInfonavit').val();
            var descuentoFonacot_ = tr.find('#DescuentoFonacot').val();
            var descuentoPension_ = tr.find('#DescuentoPension').val();
            var otrosDescuentos_ = tr.find('#OtrosDescuentos').val();
            var isr_ = tr.find('#Isr').val();
            var ingresos_ = tr.find('#Ingresos').val();

            //Creamos la entidad a pasar como parametro.
            var detallePrenomina = {
                id: id_,
                diasLaborados: diasLaborados_,
                gratificacion: gratificacion_,
                primaVacacional: primaVacacional_,
                aguinaldo: aguinaldo_,
                descuentoInfonavit: descuentoInfonavit_,
                descuentoFonacot: descuentoFonacot_,
                descuentoPension: descuentoPension_,
                otrosDescuentos: otrosDescuentos_,
                isr: isr_,
                ingresos: ingresos_
            }


            var url =
            $.ajax({
                url: "/DetallePrenominas/updateEmployee/",
                data: detallePrenomina,
                dataType: "json",
                traditional: true,
                cache: false,
                type: "POST",
                success: function (data) {
                    tr.find('#diasLaborados').text(data.employee.diasLaborados);
                    tr.find('#gratificacion').text("$" + data.employee.gratificacion);
                    tr.find('#primaVacacional').text("$" + data.employee.primaVacacional);
                    tr.find('#aguinaldo').text("$" + data.employee.aguinaldo);
                    tr.find('#descuentoInfonavit').text("$" + data.employee.descuentoInfonavit);
                    tr.find('#descuentoFonacot').text("$" + data.employee.descuentoFonacot);
                    tr.find('#descuentoPension').text("$" + data.employee.descuentoPension);
                    tr.find('#otrosDescuentos').text("$" + data.employee.otrosDescuentos);
                    tr.find('#netoPagar').text("$" + data.employee.netoPagar);
                    tr.find('#isr').text("$" + data.employee.isr);
                    tr.find('#ingresos').text("$" + data.employee.ingresos);
                },
                error: function (response) {
                    alert('error');
                }
            });

            tr.find('.edit-mode, .display-mode').toggle();
        });

    })
</script>